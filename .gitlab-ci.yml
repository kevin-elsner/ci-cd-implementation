# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: alpine:latest

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

variables:
  GIT_STRATEGY: clone
  GIT_CLEAN_FLAGS: none

before_script:
  - apk update && apk add git ca-certificates openssl
  - git config --global http.sslVersion tlsv1.2
  - git config --global user.email "kevin.p@elsner.com"
  - git config --global user.name "Kevin Panchani"
  - git remote set-url origin https://oauth2:${GITLAB_TOKEN}@gitlab.elsner.com/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}.git
  - git fetch --all
  
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - |
      if git show-ref --verify --quiet refs/heads/master; then
        git checkout master
      fi
    - git merge staging -m "Merge branch 'staging' into master"
    - git push origin master
    - php bin/magento s:up
    - php bin/magento s:d:c
    - php bin/magento s:s:d -f
    - php bin/magento c:f
    - echo "Application successfully deployed."
